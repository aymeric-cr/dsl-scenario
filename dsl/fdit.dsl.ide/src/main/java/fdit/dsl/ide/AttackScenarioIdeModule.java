/*
 * generated by Xtext 2.20.0
 */
package fdit.dsl.ide;

import com.google.inject.Binder;
import fdit.dsl.ide.contentassist.antlr.AttackScenarioParser;
import org.eclipse.xtext.ide.editor.contentassist.IdeContentProposalCreator;
import org.eclipse.xtext.ide.editor.contentassist.IdeContentProposalProvider;
import org.eclipse.xtext.ide.editor.contentassist.antlr.IContentAssistParser;
import org.eclipse.xtext.ide.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.parser.antlr.ISyntaxErrorMessageProvider;

/**
 * Use this class to register ide components.
 */
public class AttackScenarioIdeModule extends AbstractAttackScenarioIdeModule {
    public Class<? extends IdeContentProposalProvider> bindIdeContentProposalProvider() {
        return AttackScenarioContentProposalProvider.class;
    }

    public Class<? extends IdeContentProposalCreator> bindIdeContentProposalCreator() {
        return AttackScenarioProposalCreator.class;
    }

    public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
        return AttackScenarioHighlightingCalculator.class;
    }

    public Class<? extends ISyntaxErrorMessageProvider> bindISyntaxErrorMessageProvider() {
        return AttackScenarioErrorMessageProvider.class;
    }

    @Override
    public void configure(Binder binder) {
 //       binder.bind(IdeContentProposalProvider.class).to(AttackScenarioContentProposalProvider.class);
        binder.bind(IdeContentProposalCreator.class).to(AttackScenarioProposalCreator.class);
        binder.bind(IContentAssistParser.class).to(AttackScenarioParser.class);
 //       binder.bind(ISemanticHighlightingCalculator.class).to(AttackScenarioHighlightingCalculator.class);
        binder.bind(ISyntaxErrorMessageProvider.class).to(AttackScenarioErrorMessageProvider.class);
        super.configure(binder);
    }
}
