dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
    testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
    testCompile "org.mockito:mockito-all:$mockitoVersion"
    testCompile "org.powermock:powermock-module-junit4:$powermockitoVersion"
    testCompile "org.powermock:powermock-api-mockito:$powermockitoVersion"
    compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
    compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
    compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.10.0'
}
configurations {
    compile.extendsFrom metamodel, ltlcondition, database
    mwe2 {
        extendsFrom compile
    }
}

dependencies {
    mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.0.201605261059"
    mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
    mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
    mwe2 "org.eclipse.xtext:xtext-antlr-generator:[2.1.1, 3)"
}

task generateXtextLanguage(type: JavaExec) {
    main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
    classpath = configurations.mwe2
    inputs.file "src/main/java/fdit/triggcondition/GenerateTriggeringCondition.mwe2"
    inputs.file "src/main/java/fdit/triggcondition/TriggeringCondition.xtext"
    outputs.dir "src/main/xtext-gen"
    args += "src/main/java/fdit/triggcondition/GenerateTriggeringCondition.mwe2"
    args += "-p"
    args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'org.xtext:xtext-gradle-plugin:2.0.8'
    }
}
apply plugin: 'org.xtext.xtend'